name: Test

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    strategy:
      matrix:
        image:
          - name: latest
            python_version: "3.9"
          - name: python3.9
            python_version: "3.9"
          - name: python3.9-alpine3.13
            python_version: "3.9"
          - name: python3.8
            python_version: "3.8"
          - name: python3.8-alpine3.10
            python_version: "3.8"
          - name: python3.7
            python_version: "3.7"
          - name: python3.7-alpine3.8
            python_version: "3.7"
          - name: python3.6
            python_version: "3.6"
          - name: python3.9-slim
            python_version: "3.9"
      fail-fast: true
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install poetry dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Test Image
        run: |
            source .venv/bin/activate
            bash scripts/test.sh
        env:
          NAME: ${{ matrix.image.name }}
          PYTHON_VERSION: ${{ matrix.image.python_version }}
